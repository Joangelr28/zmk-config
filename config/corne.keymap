/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&spi1 {
    compatible = "nordic,nrf-spim";

    /* Cannot be used together with i2c0. */

    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "SK6812mini";

        /* SPI */

        reg = <0>;/* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>;/* There are per-key RGB, but the first 6 are underglow */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

&mt {
    tapping-term-ms = <400>;
};

/ {
    macros {
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LEFT_SHIFT>,
                <&macro_tap &kp INSERT>,
                <&macro_release &kp LEFT_SHIFT>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RCTRL>,
                <&macro_tap &kp C>,
                <&macro_release &kp RCTRL>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RIGHT_CONTROL>,
                <&macro_tap &kp X>,
                <&macro_release &kp RCTRL>;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RIGHT_CONTROL>,
                <&macro_tap &kp Z>,
                <&macro_release &kp RCTRL>;
        };
        redo: redo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RIGHT_CONTROL &kp LEFT_SHIFT>,
                <&macro_tap &kp Z>,
                <&macro_release &kp LEFT_SHIFT &kp RCTRL>;
        };
        scrnsh_full: scrnsh_full {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCMD &kp LEFT_SHIFT>,
                <&macro_tap &kp NUMBER_3>,
                <&macro_release &kp LCMD &kp LEFT_SHIFT>;
        };
        scrnsh_part: scrnsh_part {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCMD &kp LSHFT>,
                <&macro_tap &kp NUMBER_4>,
                <&macro_release &kp LCMD &kp LSHFT>;
        };
        open_spot: open_spot {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LCMD &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &lt 6 ESC  &kp SEMICOLON  &kp COMMA   &kp DOT   &kp P      &kp Y     &kp F   &kp G      &kp C   &kp R   &kp L    &kp RALT
 &mt LEFT_SHIFT TAB          &kp A      &kp O     &kp E   &kp U      &kp I     &kp D   &kp H      &kp T   &kp N   &kp S  &kp RSHIFT
          &kp LCTRL      &kp SLASH      &kp Q     &kp J   &kp K      &kp X     &kp B   &kp M      &kp W   &kp V   &kp Z   &kp RCTRL
                                               &kp LCMD   &mo 2  &kp SPACE  &kp RETURN   &mo 3  &kp BSPC
            >;
        };

        layer_qwerty {
            bindings = <
      &lt 6 ESC   &kp Q   &kp W     &kp E   &kp R      &kp T       &kp Y   &kp U      &kp I    &kp O     &kp P   &kp RALT
        &kp TAB   &kp A   &kp S     &kp D   &kp F      &kp G       &kp H   &kp J      &kp K    &kp L  &kp SEMI  &sk RSHFT
 &kp LEFT_SHIFT   &kp Z   &kp X     &kp C   &kp V      &kp B       &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                                 &kp LCMD   &mo 2  &kp SPACE  &kp RETURN   &mo 3   &kp BSPC
            >;
        };

        layer_numbers {
            bindings = <
  &mo 7         &kp LT         &kp GT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCL  &kp PRCNT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp STAR  &trans
  &none  &kp AMPERSAND  &kp BACKSLASH      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp SQT  &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &trans
 &trans      &kp GRAVE     &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp AT     &kp N0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp CARET  &trans
                                                     &trans                 &trans    &trans    &trans        &trans        &kp DEL
            >;
        };

        layer_functions {
            bindings = <
 &trans    &kp F1     &kp F2     &kp F3   &paste   &copy  &scrnsh_full  &scrnsh_part    &kp UP     &kp F4   &kp F5  &trans
 &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &redo         &undo      &kp LEFT  &kp DOWN  &kp RIGHT   &kp F6  &trans
 &trans    &kp F7     &kp F8     &kp F9    &none    &cut         &none    &open_spot   &kp F10    &kp F11  &kp F12  &trans
                                 &trans   &trans  &trans        &trans        &trans    &trans
            >;
        };

        layer_g_moba {
            bindings = <
 &kp APOS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5   &none   &none   &none   &none   &none   &none
  &kp TAB         &kp Q         &kp W         &kp E         &kp R           &kp T   &none   &none   &none   &none   &none   &none
  &kp ESC         &kp Z         &kp C         &kp D         &kp F           &kp B   &none   &none   &none   &none   &none   &none
                                          &kp LCTRL         &mo 7  &mt LALT SPACE  &trans  &trans  &trans
            >;
        };

        layer_g_shooter {
            bindings = <
 &lt 6 ESC   &kp Q   &kp W      &kp E   &kp R      &kp T   &none   &none   &none   &none   &none   &none
   &kp TAB   &kp A   &kp S      &kp D   &kp F      &kp G   &none   &none   &none   &none   &none   &none
 &kp LSHFT   &kp Z   &kp X      &kp C   &kp V      &kp B   &none   &none   &none   &none   &none   &none
                            &kp LCTRL   &kp M  &kp SPACE  &trans  &trans  &trans
            >;
        };

        layer_so_settings {
            bindings = <
 &trans   &none       &none  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE   &none   &none   &none   &none   &none   &none
 &trans   &none  &kp C_PREV      &kp C_PP    &kp C_NEXT       &none   &none   &none   &none   &none   &none   &none
 &trans   &none       &none  &kp C_BRI_DN  &kp C_BRI_UP       &none   &none   &none   &none   &none   &none   &none
                                   &trans         &mo 7      &trans  &trans  &trans  &trans
            >;
        };

        layer_kb_settings {
            bindings = <
 &trans  &rgb_ug RGB_TOG   &none  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF   &none   &none   &none   &none   &none   &none
  &none            &none   &none  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI            &none   &none   &none   &none   &none   &none   &none
  &none            &none   &none           &tog 1           &tog 4           &tog 5   &none   &none   &none   &none   &none   &none
                                            &none            &none            &none   &none   &none   &none
            >;
        };
    };
};
