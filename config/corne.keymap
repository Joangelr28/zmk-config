#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {
    keymap {
    compatible = "zmk,keymap";
    default_layer {
      // |   ESC   |    ,    |    .    |    '    |    P    |    Y    | XXX |    F    |    H    |    J    |    K    |    L    |   DEL   |
      // |   TAB   |    A    |  ALT O  |  CTL E  | SHIFT I |    U    | XXX |    D    | SHIFT R |  CTL T  |  ALT N  |    S    |    -    |
      // |    \    |    ;    |    Q    |    G    |    C    |    X    | XXX |    B    |    M    |    W    |    V    |    Z    |    /    |
      //                               |   WIN   |   MO1   |  SPACE  | XXX |  ENTER  |   MO2   |BACKSPACE|
      bindings = <
        &kp ESC   &kp COMMA &kp DOT    &kp SQT     &kp P       &kp Y       &kp F     &kp H       &kp J       &kp K      &kp L &kp DEL
        &kp TAB   &kp A     &mt LALT O &mt LCTRL E &mt LSHFT I &kp U       &kp D     &mt RSHFT R &mt RCTRL T &mt RALT N &kp S &kp MINUS
        &kp BSLH  &kp SEMI  &kp Q      &kp G       &kp C       &kp X       &kp B     &kp M       &kp W       &kp V      &kp Z &kp SLASH
                                       &kp LGUI    &mo 1       &kp SPACE   &kp ENTER &mo 2       &kp BSPC
      >;
    };
    lower_layer {
    // |   ESC   |    1    |    2    |    3    |    4    |    5    | XXX |    6    |    7    |    8    |    9    |    0    |   DEL   |
    // |   TAB   |    &    |  ALT [  |  CTL {  | SHIFT ( |    $    | XXX |    !    | SHIFT ) |  CTL }  |  ALT  ] |    %    |    -    |
    // |    \    |    @    |         |    *    |    +    |    #    | XXX |    ~    |    =    |    ^    |         |    Ã‘    |    /    |
    //                               |   WIN   |_________|  SPACE  | XXX |  ENTER  |   MO3   |BACKSPACE|
      bindings = <
        &kp ESC  &kp N1   &kp N2        &kp N3         &kp N4         &kp N5       &kp N6    &kp N7         &kp N8          &kp N9        &kp N0    &kp DEL
        &kp TAB  &kp AMPS &mt LALT LBKT &mt LCTRL LBRC &mt LSHFT LPAR &kp DOLLAR   &kp EXCL  &mt RSHFT RPAR &mt RCTRL RBRC  &mt RALT RBKT &kp PRCNT &kp MINUS
        &kp BSLH &kp AT   &none         &kp STAR       &kp PLUS       &kp HASH     &kp TILDE &kp EQUAL      &kp CARET       &none         &kp N     &kp SLASH
                                        &kp LEFT_WIN   &trans         &kp SPACE    &kp ENTER &mo 3          &kp BSPC
      >;
    };
    raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans    &trans  &trans    &trans    &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &kp GRAVE
   &kp LSHFT &trans    &trans  &trans    &trans    &trans      &trans    &trans    &trans          &trans   &kp BSLH &kp TILDE
                                   &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
        };
};
