#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

&mt {
  tapping-term-ms = <400>;
};

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
    &kp ESC  &kp COMMA     &kp DOT      &kp SQT        &kp P      &kp Y                &kp F        &kp H        &kp K       &kp J   &kp L    &kp DEL
    &kp TAB      &kp A  &mt LALT O  &mt LCTRL E  &mt LSHFT I      &kp U                &kp D  &mt RSHFT R  &mt RCTRL T  &mt RALT N   &kp S  &kp MINUS
 &lt 4 BSLH   &kp SEMI       &kp Q        &kp G        &kp C      &kp X                &kp B        &kp M        &kp W       &kp V   &kp Z  &kp SLASH
                                       &kp LGUI        &mo 2  &kp SPACE            &kp ENTER        &mo 3     &kp BSPC
            >;
        };

        layer_GAIMING {
            bindings = <
 &kp ESC   &kp Q   &kp W     &kp E   &kp R      &kp T              &kp Y   &kp U      &kp I    &kp O     &kp P   &kp BSPC
 &kp TAB   &kp A   &kp S     &kp D   &kp F      &kp G              &kp H   &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
 &lt 4 M   &kp Z   &kp X     &kp C   &kp V      &kp B              &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                          &kp LGUI   &mo 2  &kp SPACE            &kp RET   &mo 3   &kp RALT
            >;
        };

        layer_LOWER {
            bindings = <
 &trans    &kp N1         &kp N2          &kp N3          &kp N4      &kp N5               &kp N6          &kp N7          &kp N8         &kp N9     &kp N0  &trans
 &trans  &kp AMPS  &mt LALT LBKT  &mt LCTRL LBRC  &mt LSHFT LPAR  &kp DOLLAR             &kp EXCL  &mt RSHFT RPAR  &mt RCTRL RBRC  &mt RALT RBKT  &kp PRCNT  &trans
 &trans    &kp AT          &none        &kp STAR        &kp PLUS    &kp HASH            &kp TILDE       &kp EQUAL       &kp CARET          &none      &kp N  &trans
                                          &trans          &trans      &trans               &trans           &mo 4          &trans
            >;
        };

        layer_RAISE {
            bindings = <
  &none     &none      &none      &none  &kp K_PASTE  &kp K_COPY                &none    &kp LEFT     &kp UP  &kp DOWN  &kp RIGHT    &none
  &none  &kp HOME  &kp PG_DN  &kp PG_UP      &kp END  &kp K_UNDO            &kp K_CUT  &kp K_REDO  &kp RCTRL  &kp RALT  &kp PSCRN    &none
 &kp F1    &kp F2     &kp F3     &kp F4       &kp F5      &kp F6               &kp F7      &kp F8     &kp F9   &kp F10    &kp F11  &kp F12
                                 &trans        &mo 4      &trans               &trans      &trans     &trans
            >;
        };

        layer_SETTING {
            bindings = <
    &out OUT_TOG  &rgb_ug RGB_HUI   &none  &bt BT_NXT  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                   &none         &none             &none         &none         &none   &none
 &rgb_ug RGB_TOG  &rgb_ug RGB_HUD   &none  &bt BT_CLR     &kp C_BRI_DN     &kp C_BRI_UP                   &none    &kp K_PREV  &kp K_PLAY_PAUSE    &kp K_STOP    &kp K_NEXT   &none
          &trans  &rgb_ug RGB_EFF   &none  &bt BT_PRV     &kp K_VOL_DN     &kp K_VOL_UP            &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
                                               &tog 1           &trans       &kp K_MUTE                   &none        &trans             &none
            >;
        };

    };
};
